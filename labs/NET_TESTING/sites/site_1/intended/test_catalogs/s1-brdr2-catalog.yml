anta.tests.connectivity:
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-brdr1.atd.lab
      neighbor_port: Ethernet1
      port: Ethernet1
    result_overwrite:
      custom_field: 'Local: Ethernet1 - Remote: s1-brdr1 Ethernet1'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-brdr1.atd.lab
      neighbor_port: Ethernet6
      port: Ethernet6
    result_overwrite:
      custom_field: 'Local: Ethernet6 - Remote: s1-brdr1 Ethernet6'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-spine1.atd.lab
      neighbor_port: Ethernet8
      port: Ethernet2
    result_overwrite:
      custom_field: 'Local: Ethernet2 - Remote: s1-spine1 Ethernet8'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-spine2.atd.lab
      neighbor_port: Ethernet8
      port: Ethernet3
    result_overwrite:
      custom_field: 'Local: Ethernet3 - Remote: s1-spine2 Ethernet8'
- VerifyReachability:
    hosts:
    - destination: 172.16.1.20
      repeat: 1
      source: 172.16.1.21
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet2 (IP: 172.16.1.21) - Destination:
        s1-spine1 Ethernet8 (IP: 172.16.1.20)'
- VerifyReachability:
    hosts:
    - destination: 172.16.1.22
      repeat: 1
      source: 172.16.1.23
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet3 (IP: 172.16.1.23) - Destination:
        s1-spine2 Ethernet8 (IP: 172.16.1.22)'
- VerifyReachability:
    hosts:
    - destination: 10.250.1.1
      repeat: 1
      source: 10.250.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: Loopback0 (IP: 10.250.1.8) - Destination: s1-spine1 Loopback0
        (IP: 10.250.1.1)'
- VerifyReachability:
    hosts:
    - destination: 10.250.1.2
      repeat: 1
      source: 10.250.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: Loopback0 (IP: 10.250.1.8) - Destination: s1-spine2 Loopback0
        (IP: 10.250.1.2)'
- VerifyReachability:
    hosts:
    - destination: 10.250.1.3
      repeat: 1
      source: 10.250.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: Loopback0 (IP: 10.250.1.8) - Destination: s1-leaf1 Loopback0
        (IP: 10.250.1.3)'
- VerifyReachability:
    hosts:
    - destination: 10.250.1.4
      repeat: 1
      source: 10.250.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: Loopback0 (IP: 10.250.1.8) - Destination: s1-leaf2 Loopback0
        (IP: 10.250.1.4)'
- VerifyReachability:
    hosts:
    - destination: 10.250.1.5
      repeat: 1
      source: 10.250.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: Loopback0 (IP: 10.250.1.8) - Destination: s1-leaf3 Loopback0
        (IP: 10.250.1.5)'
- VerifyReachability:
    hosts:
    - destination: 10.250.1.6
      repeat: 1
      source: 10.250.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: Loopback0 (IP: 10.250.1.8) - Destination: s1-leaf4 Loopback0
        (IP: 10.250.1.6)'
- VerifyReachability:
    hosts:
    - destination: 10.250.1.7
      repeat: 1
      source: 10.250.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: Loopback0 (IP: 10.250.1.8) - Destination: s1-brdr1 Loopback0
        (IP: 10.250.1.7)'
- VerifyReachability:
    hosts:
    - destination: 10.250.1.8
      repeat: 1
      source: 10.250.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: Loopback0 (IP: 10.250.1.8) - Destination: s1-brdr2 Loopback0
        (IP: 10.250.1.8)'
anta.tests.hardware:
- VerifyEnvironmentPower:
    result_overwrite:
      custom_field: 'Accepted States: ''ok'''
    states:
    - ok
- VerifyEnvironmentCooling:
    result_overwrite:
      custom_field: 'Accepted States: ''ok'''
    states:
    - ok
- VerifyTemperature: null
- VerifyTransceiversManufacturers:
    manufacturers:
    - Arista Networks
    - Arastra, Inc.
    - Not Present
    result_overwrite:
      custom_field: 'Accepted Manufacturers: ''Arista Networks'', ''Arastra, Inc.'',
        ''Not Present'''
anta.tests.interfaces:
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet1
      status: up
    result_overwrite:
      custom_field: Interface Ethernet1 - MLAG_s1-brdr1_Ethernet1 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet6
      status: up
    result_overwrite:
      custom_field: Interface Ethernet6 - MLAG_s1-brdr1_Ethernet6 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet2
      status: up
    result_overwrite:
      custom_field: Interface Ethernet2 - P2P_s1-spine1_Ethernet8 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet3
      status: up
    result_overwrite:
      custom_field: Interface Ethernet3 - P2P_s1-spine2_Ethernet8 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet5
      status: up
    result_overwrite:
      custom_field: Interface Ethernet5 - P2P_s2-brdr2_Ethernet5 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Port-Channel1
      status: up
    result_overwrite:
      custom_field: Interface Port-Channel1 - MLAG_s1-brdr1_Port-Channel1 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Vlan4093
      status: up
    result_overwrite:
      custom_field: Interface Vlan4093 - MLAG_L3 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Vlan4094
      status: up
    result_overwrite:
      custom_field: Interface Vlan4094 - MLAG = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Vlan10
      status: up
    result_overwrite:
      custom_field: Interface Vlan10 - Ten = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Vlan20
      status: up
    result_overwrite:
      custom_field: Interface Vlan20 - Twenty = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Vlan30
      status: up
    result_overwrite:
      custom_field: Interface Vlan30 - Thiry = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Vlan3009
      status: up
    result_overwrite:
      custom_field: Interface Vlan3009 - MLAG_L3_VRF_OVERLAY = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Loopback0
      status: up
    result_overwrite:
      custom_field: Interface Loopback0 - ROUTER_ID = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Loopback1
      status: up
    result_overwrite:
      custom_field: Interface Loopback1 - VXLAN_TUNNEL_SOURCE = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Vxlan1
      status: up
    result_overwrite:
      custom_field: Interface Vxlan1 = 'up'
anta.tests.mlag:
- VerifyMlagStatus: null
anta.tests.routing.bgp:
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 10.250.1.1
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-spine1 (IP: 10.250.1.1)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 10.250.1.2
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-spine2 (IP: 10.250.1.2)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 10.252.1.8
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-brdr1 (IP: 10.252.1.8)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.16.1.20
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-spine1 (IP: 172.16.1.20)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.16.1.22
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-spine2 (IP: 172.16.1.22)'
anta.tests.routing.generic:
- VerifyRoutingProtocolModel:
    model: multi-agent
    result_overwrite:
      custom_field: 'Routing protocol model: multi-agent'
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.250.1.1 - Peer: s1-spine1'
    routes:
    - 10.250.1.1
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.250.1.2 - Peer: s1-spine2'
    routes:
    - 10.250.1.2
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.250.1.3 - Peer: s1-leaf1'
    routes:
    - 10.250.1.3
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.250.1.4 - Peer: s1-leaf2'
    routes:
    - 10.250.1.4
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.250.1.5 - Peer: s1-leaf3'
    routes:
    - 10.250.1.5
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.250.1.6 - Peer: s1-leaf4'
    routes:
    - 10.250.1.6
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.250.1.7 - Peer: s1-brdr1'
    routes:
    - 10.250.1.7
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.250.1.8 - Peer: s1-brdr2'
    routes:
    - 10.250.1.8
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.255.1.3 - Peer: s1-leaf1'
    routes:
    - 10.255.1.3
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.255.1.5 - Peer: s1-leaf3'
    routes:
    - 10.255.1.5
- VerifyRoutingTableEntry:
    result_overwrite:
      custom_field: 'Route: 10.255.1.7 - Peer: s1-brdr1'
    routes:
    - 10.255.1.7
anta.tests.system:
- VerifyNTP: null
- VerifyReloadCause: null
