anta.tests.connectivity:
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf1.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet2
    result_overwrite:
      custom_field: 'Local: Ethernet2 - Remote: s1-leaf1 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf2.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet3
    result_overwrite:
      custom_field: 'Local: Ethernet3 - Remote: s1-leaf2 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf3.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet4
    result_overwrite:
      custom_field: 'Local: Ethernet4 - Remote: s1-leaf3 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf4.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet5
    result_overwrite:
      custom_field: 'Local: Ethernet5 - Remote: s1-leaf4 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-brdr1.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet7
    result_overwrite:
      custom_field: 'Local: Ethernet7 - Remote: s1-brdr1 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-brdr2.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet8
    result_overwrite:
      custom_field: 'Local: Ethernet8 - Remote: s1-brdr2 Ethernet2'
- VerifyReachability:
    hosts:
    - destination: 172.16.1.1
      repeat: 1
      source: 172.16.1.0
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet2 (IP: 172.16.1.0) - Destination:
        s1-leaf1 Ethernet2 (IP: 172.16.1.1)'
- VerifyReachability:
    hosts:
    - destination: 172.16.1.5
      repeat: 1
      source: 172.16.1.4
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet3 (IP: 172.16.1.4) - Destination:
        s1-leaf2 Ethernet2 (IP: 172.16.1.5)'
- VerifyReachability:
    hosts:
    - destination: 172.16.1.9
      repeat: 1
      source: 172.16.1.8
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet4 (IP: 172.16.1.8) - Destination:
        s1-leaf3 Ethernet2 (IP: 172.16.1.9)'
- VerifyReachability:
    hosts:
    - destination: 172.16.1.13
      repeat: 1
      source: 172.16.1.12
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet5 (IP: 172.16.1.12) - Destination:
        s1-leaf4 Ethernet2 (IP: 172.16.1.13)'
- VerifyReachability:
    hosts:
    - destination: 172.16.1.17
      repeat: 1
      source: 172.16.1.16
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet7 (IP: 172.16.1.16) - Destination:
        s1-brdr1 Ethernet2 (IP: 172.16.1.17)'
- VerifyReachability:
    hosts:
    - destination: 172.16.1.21
      repeat: 1
      source: 172.16.1.20
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet8 (IP: 172.16.1.20) - Destination:
        s1-brdr2 Ethernet2 (IP: 172.16.1.21)'
anta.tests.hardware:
- VerifyEnvironmentPower:
    result_overwrite:
      custom_field: 'Accepted States: ''ok'''
    states:
    - ok
- VerifyEnvironmentCooling:
    result_overwrite:
      custom_field: 'Accepted States: ''ok'''
    states:
    - ok
- VerifyTemperature: null
- VerifyTransceiversManufacturers:
    manufacturers:
    - Arista Networks
    - Arastra, Inc.
    - Not Present
    result_overwrite:
      custom_field: 'Accepted Manufacturers: ''Arista Networks'', ''Arastra, Inc.'',
        ''Not Present'''
anta.tests.interfaces:
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet2
      status: up
    result_overwrite:
      custom_field: Interface Ethernet2 - P2P_s1-leaf1_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet3
      status: up
    result_overwrite:
      custom_field: Interface Ethernet3 - P2P_s1-leaf2_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet4
      status: up
    result_overwrite:
      custom_field: Interface Ethernet4 - P2P_s1-leaf3_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet5
      status: up
    result_overwrite:
      custom_field: Interface Ethernet5 - P2P_s1-leaf4_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet7
      status: up
    result_overwrite:
      custom_field: Interface Ethernet7 - P2P_s1-brdr1_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet8
      status: up
    result_overwrite:
      custom_field: Interface Ethernet8 - P2P_s1-brdr2_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Loopback0
      status: up
    result_overwrite:
      custom_field: Interface Loopback0 - ROUTER_ID = 'up'
anta.tests.routing.bgp:
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 10.250.1.7
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-brdr1 (IP: 10.250.1.7)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 10.250.1.8
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-brdr2 (IP: 10.250.1.8)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 10.250.1.3
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf1 (IP: 10.250.1.3)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 10.250.1.4
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf2 (IP: 10.250.1.4)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 10.250.1.5
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf3 (IP: 10.250.1.5)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 10.250.1.6
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf4 (IP: 10.250.1.6)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.16.1.1
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf1 (IP: 172.16.1.1)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.16.1.5
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf2 (IP: 172.16.1.5)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.16.1.9
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf3 (IP: 172.16.1.9)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.16.1.13
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf4 (IP: 172.16.1.13)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.16.1.17
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-brdr1 (IP: 172.16.1.17)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.16.1.21
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-brdr2 (IP: 172.16.1.21)'
anta.tests.routing.generic:
- VerifyRoutingProtocolModel:
    model: multi-agent
    result_overwrite:
      custom_field: 'Routing protocol model: multi-agent'
anta.tests.system:
- VerifyNTP: null
- VerifyReloadCause: null
